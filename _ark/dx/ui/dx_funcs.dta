#include ../countdown/dx_countdown_funcs.dta
; funcs for finding instrument objects in track panel
{func get_guitar_panel
   {{get_track_panel} find guitar}
}
{func get_bass_panel
   {{get_track_panel} find bass}
}
{func get_drum_panel
   {{get_track_panel} find drum}
}
{func get_track_0_panel
   {{get_track_panel} find track_0}
}
{func get_track_1_panel
   {{get_track_panel} find track_1}
}
;fake log writer so rb3 ported script doesnt crash
{func
   dx_log_writer
   ($loglevel $dx_log_writer)
   {if {|| $dx_logging_essential $dx_logging_default $dx_logging_info $dx_logging_insane $dx_logging_beatmatch $dx_logging_countdown}
      {set $dx_log_counter 0}
   }
}
;overshell change screen functions
{func os_change_screen ($next) ;for moving forward, flip from right to left
   {set $os_next_screen {sprint $next "_screen"}}
   {set $os_next_panel {sprint $next "_panel"}}
   {thread_task kTaskUISeconds
      (script
         OS_CHANGE_CURRENT_ANIM
         {ui push_screen $os_next_screen}
         OS_CHANGE_NEXT_ANIM
      )
   }
}
{func os_back_screen ($next) ;for moving backward, flip from left to right
   {set $os_next_screen {sprint $next "_screen"}}
   {set $os_next_panel {sprint $next "_panel"}}
   {thread_task kTaskUISeconds
      (script
         OS_BACK_CURRENT_ANIM
         OS_BACK_NEXT_ANIM
         {ui goto_screen $os_next_screen}
         {ui pop_screen}
      )
   }
}

; rewritten compare function for sorting by source
{func dx_icon_already_compared ($lhs $rhs $icon_compared)
   {cond
      ({&& {! {== {$lhs get_icon} $icon_compared}} {! {== {$rhs get_icon} $icon_compared}}} ; ignore
         ; {$this
         ;    cmp
         ;    $lhs
         ;    $rhs
         ;    (kSTName)
         ; }
      )
      ({&& {== {$lhs get_icon} $icon_compared} {! {== {$rhs get_icon} $icon_compared}}}
         -1 ; bring what we already sorted to the top (left side)
      )
      ({&& {! {== {$lhs get_icon} $icon_compared}} {== {$rhs get_icon} $icon_compared}}
         1 ; bring what we already sorted to the top (right side)
      )
      ({&& {== {$lhs get_icon} $icon_compared} {== {$rhs get_icon} $icon_compared}} ; ignore
         ; {$this
         ;    cmp
         ;    $lhs
         ;    $rhs
         ;    (kSTName)
         ; }
      )
   }
}


{func dx_icon_compare ($lhs $rhs $icon $already_compared)
   {foreach $icon_compared $already_compared
      {dx_icon_already_compared $lhs $rhs $icon_compared} ;ordering fix
   }
   {cond
      ({&& {! {== {$lhs get_icon} $icon}} {! {== {$rhs get_icon} $icon}}} ; ignore
         ; {$this
         ;    cmp
         ;    $lhs
         ;    $rhs
         ;    (kSTName)
         ; }
      )
      ({&& {== {$lhs get_icon} $icon} {! {== {$rhs get_icon} $icon}}}
         -1 ; bring what we want to sort to the top (left side)
      )
      ({&& {! {== {$lhs get_icon} $icon}} {== {$rhs get_icon} $icon}}
         1 ; bring what we want to sort to the top (right side)
      )
      ({&& {== {$lhs get_icon} $icon} {== {$rhs get_icon} $icon}} ; sort matches by song game
         {$this
            cmp
            $lhs
            $rhs
            (kSTName)
         }
      )
   }
}